name: Main Workflow

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      hasChanges: ${{ steps.affected.outputs.hasChanges }}
      matrix: ${{ steps.affected.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: e-square-io/.github/.github/actions/npm-ci@main

      - name: Calculate Affected Projects
        uses: e-square-io/nx-affected-matrix@v2
        id: affected
        with:
          targets: 'test,build'

  execute:
    name: Run ${{ matrix.target }} ${{ matrix.distribution }}
    if: ${{ needs.setup.outputs.hasChanges == 'true' }}
    runs-on: ubuntu-latest
    needs: [ setup ]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - uses: e-square-io/.github/.github/actions/npm-ci@main

      - name: Run semantic-release locally
        if: ${{ matrix.target == 'build' }}
        uses: e-square-io/.github/.github/actions/semantic-release@main
        with:
          dry-run: true

      - name: Execute target
        uses: e-square-io/nx-distributed-task@v2
        id: execute
        with:
          target: ${{ matrix.target }}
          distribution: ${{ matrix.distribution }}
          projects: ${{ matrix.projects }}
          nxCloud: true

      - uses: e-square-io/.github/.github/actions/nx-codecov@main
        if: ${{ matrix.target == 'test' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          path: coverage/packages

  release:
    name: Release version
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.hasChanges && github.event_name == 'push' && github.ref == 'refs/heads/$default-branch' }}
    needs: [setup, execute]
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Obtain GitHub App Installation Access Token
        uses: e-square-io/.github/.github/actions/get-app-token@main
        id: githubAppAuth
        with:
          token: ${{ secrets.GH_AUTH_SECRET }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Semantic release
        id: release
        uses: e-square-io/.github/.github/actions/semantic-release@main
        with:
          token: ${{ steps.githubAppAuth.outputs.github-token }}
          npm-token: ${{ secrets.NPM_TOKEN }}
